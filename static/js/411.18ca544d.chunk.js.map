{"version":3,"file":"static/js/411.18ca544d.chunk.js","mappings":"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","sources":["api/wrapPromise.js","api/fetchData.js","ExchangeRate/DateBox.jsx","ExchangeRate/SourceBox.jsx","ExchangeRate/FormatBox.jsx","ExchangeRate/BaseBox.jsx","ExchangeRate/SymbolBox.jsx","ExchangeRate/TextBox.jsx","ExchangeRate/ButtonGetData.jsx","ExchangeRate/DataBox.jsx","ExchangeRate/UrlBox.jsx","ExchangeRate/index.jsx"],"sourcesContent":["function wrapPromise(promise) {\n  let status = \"pending\";\n  let response;\n\n  const suspender = promise.then(\n    (res) => {\n      status = \"success\";\n      response = res;\n    },\n    (err) => {\n      status = \"error\";\n      response = err;\n    }\n  );\n  const read = () => {\n    switch (status) {\n      case \"pending\":\n        throw suspender;\n      case \"error\":\n        throw response;\n      default:\n        return response;\n    }\n  };\n  return { read };\n}\n\nexport default wrapPromise;","import wrapPromise from \"./wrapPromise\";\n\nfunction fetchData(url) {\n  const promise = fetch(url)\n    .then((res) => res.json());\n    // .then((res) => res.data);\n\n  return wrapPromise(promise);\n}\n\nexport default fetchData;","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getState } from \"./stateSlice\";\n\nconst DateBox = ({ label, type, onChange }) => {\n  const selectedDate = useSelector(getState(type));\n  return (\n    <TextField\n      label={label}\n      type=\"date\"\n      value={selectedDate}\n      onChange={onChange}\n      size=\"small\"\n      sx={{ width: \"100%\" }}\n      inputProps={{ style: { paddingLeft: 5 } }}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n};\n\nexport default DateBox;\n","import React from \"react\";\nimport fetchData from \"../api/fetchData\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\n\nconst fetchSource1 = fetchData(\"https://api.exchangerate.host/sources\");\nconst fetchSource2 = fetchData(\n  \"https://api.exchangerate.host/cryptocurrencies\"\n);\n\nconst filterSourceOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.source} ${option?.description}`,\n});\n\nconst getSource = () => {\n  const source1 = fetchSource1.read();\n  const source2 = fetchSource2.read();\n\n  const s1 = Object.values(source1.sources).map(\n    ({ source, name, available_from_date }) => {\n      return {\n        group: \"sources\",\n        source: source,\n        description: name,\n        available_from_date: available_from_date,\n      };\n    }\n  );\n  const s2 = Object.values(source2.cryptocurrencies).map(({ symbol, name }) => {\n    return {\n      group: \"cryptocurrencies\",\n      source: symbol.toLowerCase(),\n      description: name,\n    };\n  });\n  return [...s1, ...s2];\n};\n\nconst SourceBox = ({ onChange }) => {\n  const sources = getSource();\n  return (\n    <Autocomplete\n      autoHighlight\n      onChange={onChange}\n      size=\"small\"\n      style={{ width: \"100%\" }}\n      options={sources}\n      isOptionEqualToValue={(option, value) => option.source === value.source}\n      groupBy={(option) => option.group}\n      // disableCloseOnSelect\n      getOptionLabel={(option) => option.source}\n      filterOptions={filterSourceOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option.source} - {option.description}{\" \"}\n          {option?.available_from_date\n            ? `(${option?.available_from_date}~)`\n            : null}\n        </li>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Source\" placeholder=\"Source\" />\n      )}\n    />\n  );\n};\n\nexport default SourceBox;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { getState, FORMAT } from \"./stateSlice\";\nconst FormatBox = ({ onChange }) => {\n  const selectedFormat = useSelector(getState(FORMAT));\n  return (\n    <Autocomplete\n      onChange={onChange}\n      size=\"small\"\n      value={selectedFormat}\n      options={[\"xml\", \"csv\", \"tsv\"]}\n      getOptionLabel={(option) => option}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Format\" placeholder=\"Format\" />\n      )}\n    />\n  );\n};\n\nexport default FormatBox;\n","import React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\n\nconst filterOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.code} ${option?.description}`,\n});\n\nconst BaseBox = ({ options, label, onChange }) => {\n  return (\n    <Autocomplete\n      onChange={onChange}\n      autoHighlight\n      size=\"small\"\n      options={Object.values(options.symbols)}\n      getOptionLabel={(option) => option.code}\n      filterOptions={filterOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option.code} - {option.description}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label={label} placeholder={label} />\n      )}\n    />\n  );\n};\n\nexport default BaseBox;\n","import React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\n\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst filterOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.code} ${option?.description}`,\n});\n\nconst SymbolBox = ({ options, label, onChange }) => {\n  return (\n    <Autocomplete\n      multiple\n      autoHighlight\n      onChange={onChange}\n      size=\"small\"\n      options={Object.values(options.symbols)}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option.code}\n      filterOptions={filterOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8, paddingTop: 0, paddingBottom: 0 }}\n            checked={selected}\n          />\n          {option.code} - {option.description}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label={label} placeholder={label} />\n      )}\n    />\n  );\n};\n\nexport default SymbolBox;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useSelector } from \"react-redux\";\nimport { getState } from \"./stateSlice\";\n\nconst TextBox = ({ label, type, onClear, onChange }) => {\n  const selectedValue = useSelector(getState(type));\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      size=\"small\"\n      value={selectedValue}\n      onChange={onChange}\n      sx={{ width: \"100%\" }}\n      InputProps={{\n        endAdornment: (\n          <IconButton\n            sx={{ visibility: selectedValue ? \"visible\" : \"hidden\" }}\n            onClick={onClear}\n          >\n            <ClearIcon />\n          </IconButton>\n        ),\n      }}\n    />\n  );\n};\n\nexport default TextBox;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setState,\n  getState,\n  START_DATE,\n  END_DATE,\n  FORMAT,\n  BASE,\n  SOURCE,\n  SYMBOLS,\n  AMOUNT,\n  PLACE,\n  DOWNLOAD_URLS,\n  DOWNLOAD_DATA,\n} from \"./stateSlice\";\n\nconst ButtonGetData = () => {\n  const dispatch = useDispatch();\n  const setSelected = (nm, value) => {\n    dispatch(setState({ type: nm, value: value }));\n  };\n\n  const selectedStartDate = useSelector(getState(START_DATE));\n  const selectedEndDate = useSelector(getState(END_DATE));\n  const selectedFormat = useSelector(getState(FORMAT));\n  const selectedBase = useSelector(getState(BASE));\n  const selectedSource = useSelector(getState(SOURCE));\n  const selectedSymbols = useSelector(getState(SYMBOLS));\n  const selectedAmount = useSelector(getState(AMOUNT));\n  const selectedPlace = useSelector(getState(PLACE));\n\n  const handleGetData = () => {\n    setSelected(DOWNLOAD_URLS, []);\n    setSelected(DOWNLOAD_DATA, \"\");\n\n    const params = {\n      start_date: selectedStartDate || \"\",\n      end_date: selectedEndDate || \"\",\n      base: selectedBase?.code || \"\",\n      symbols: selectedSymbols\n        ? selectedSymbols.map(({ code }) => code).join(\",\")\n        : \"\",\n      amount: selectedAmount || \"\",\n      places: selectedPlace || \"\",\n      format: selectedFormat || \"\",\n      source: selectedSource?.source || \"\",\n    };\n    const url = \"https://api.exchangerate.host/timeseries\";\n    const ext = selectedFormat ? selectedFormat : \"json\";\n    const downloadUrl = `${url}?${new URLSearchParams(params).toString()}`;\n    setSelected(DOWNLOAD_URLS, [downloadUrl]);\n\n    if (ext === \"json\") {\n      fetch(downloadUrl)\n        .then((res) => res.json())\n        .then((res) => {\n          setSelected(DOWNLOAD_DATA, JSON.stringify(res, null, 2));\n        });\n    } else {\n      fetch(downloadUrl)\n        .then((res) => res.text())\n        .then((res) => {\n          setSelected(DOWNLOAD_DATA, res);\n        });\n    }\n  };\n\n  return (\n    <Button variant=\"contained\" onClick={handleGetData} size=\"small\">\n      Get Data\n    </Button>\n  );\n};\n\nexport default ButtonGetData;\n","import TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getState, DOWNLOAD_DATA } from \"./stateSlice\";\n\nconst DataBox = () => {\n  const value = useSelector(getState(DOWNLOAD_DATA));\n  return (\n    <TextField\n      label=\"Rate\"\n      focused\n      multiline\n      rows={18}\n      sx={{ width: \"100%\" }}\n      value={value}\n    />\n  );\n};\n\nexport default DataBox;\n","import Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport { useSelector } from \"react-redux\";\nimport { getState, DOWNLOAD_URLS } from \"./stateSlice\";\n\nconst UrlBox = () => {\n  const downloadUrls = useSelector(getState(DOWNLOAD_URLS));\n  return downloadUrls?.map((link) => (\n    <Grid item xs={12} key={link}>\n      <Link href={link} target=\"_blank\" download>\n        {link}\n      </Link>\n    </Grid>\n  ));\n};\n\nexport default UrlBox;\n","import React, { Suspense, useEffect } from \"react\";\nimport fetchData from \"../api/fetchData\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\nimport Divider from \"@mui/material/Divider\";\n// import TextField from \"@mui/material/TextField\";\nimport DateBox from \"./DateBox\";\nimport SourceBox from \"./SourceBox\";\nimport FormatBox from \"./FormatBox\";\nimport BaseBox from \"./BaseBox\";\nimport SymbolBox from \"./SymbolBox\";\nimport TextBox from \"./TextBox\";\n\n// import { useSelector, useDispatch } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setState,\n  // getState,\n  START_DATE,\n  END_DATE,\n  FORMAT,\n  BASE,\n  SOURCE,\n  SYMBOLS,\n  AMOUNT,\n  PLACE,\n  // DOWNLOAD_URLS,\n  // DOWNLOAD_DATA,\n} from \"./stateSlice\";\nimport ButtonGetData from \"./ButtonGetData\";\nimport DataBox from \"./DataBox\";\nimport UrlBox from \"./UrlBox\";\n\nconst fetchSymbol = fetchData(\"https://api.exchangerate.host/symbols\");\n\nconst ExchangeRate = () => {\n  const dispatch = useDispatch();\n\n  const setSelected = (nm, value) => {\n    dispatch(setState({ type: nm, value: value }));\n  };\n\n  const handleChangeStartDate = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(START_DATE, value);\n  };\n  const handleChangeEndDate = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(END_DATE, value);\n  };\n  const handleChangeFormat = (event, value) => {\n    setSelected(FORMAT, value);\n  };\n  const handleChangeBase = (event, value) => {\n    setSelected(BASE, value);\n  };\n  const handleChangeSource = (event, value) => {\n    setSelected(SOURCE, value);\n  };\n  const handleChangeSymbol = (event, value) => {\n    setSelected(SYMBOLS, value);\n  };\n  const handleChangeAmount = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(AMOUNT, value);\n  };\n  const handleClearAmount = (event) => {\n    setSelected(AMOUNT, \"\");\n  };\n  const handleChangePlace = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(PLACE, value);\n  };\n  const handleClearPlace = (event) => {\n    setSelected(PLACE, \"\");\n  };\n\n  useEffect(() => {\n    document.title = \"Exchange Rate\";\n  }, []);\n\n  const symbols = fetchSymbol.read();\n  return (\n    <div style={{ padding: 5 }}>\n      <h1>Exchange Rate</h1>\n      <Grid container spacing={1}>\n        <Grid item xs={4}>\n          <DateBox\n            label=\"Start Date\"\n            type={START_DATE}\n            onChange={handleChangeStartDate}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <DateBox\n            label=\"End Date\"\n            type={END_DATE}\n            onChange={handleChangeEndDate}\n          />\n        </Grid>\n        <Grid item xs={4}>\n          <FormatBox onChange={handleChangeFormat} />\n        </Grid>\n        <Grid item xs={6}>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <BaseBox\n              label=\"Base\"\n              options={symbols}\n              onChange={handleChangeBase}\n            />\n          </Suspense>\n        </Grid>\n        <Grid item xs={6}>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <SymbolBox\n              label=\"Symbols\"\n              options={symbols}\n              multiple={true}\n              onChange={handleChangeSymbol}\n            />\n          </Suspense>\n        </Grid>\n        <Grid item xs={6}>\n          <TextBox\n            label=\"Amount\"\n            type={AMOUNT}\n            onClear={handleClearAmount}\n            onChange={handleChangeAmount}\n          />\n        </Grid>\n        <Grid item xs={6}>\n          <TextBox\n            label=\"Place\"\n            type={PLACE}\n            onClear={handleClearPlace}\n            onChange={handleChangePlace}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Suspense fallback={<div>Loading ...</div>}>\n            <SourceBox onChange={handleChangeSource} />\n          </Suspense>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ display: \"flex\" }}>\n            <ButtonGetData />\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <DataBox />\n        </Grid>\n        <UrlBox />\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://exchangerate.host/#/docs\" target=\"_blank\">\n            https://exchangerate.host/#/docs\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://api.exchangerate.host/symbols\" target=\"_blank\">\n            https://api.exchangerate.host/symbols\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://api.exchangerate.host/sources\" target=\"_blank\">\n            https://api.exchangerate.host/sources\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link\n            href=\"https://api.exchangerate.host/cryptocurrencies\"\n            target=\"_blank\"\n          >\n            https://api.exchangerate.host/cryptocurrencies\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ExchangeRate;\n"],"names":["promise","response","status","suspender","then","res","err","read","url","fetch","json","wrapPromise","_ref","label","type","onChange","selectedDate","useSelector","getState","_jsx","TextField","value","size","sx","width","inputProps","style","paddingLeft","InputLabelProps","shrink","fetchSource1","fetchData","fetchSource2","filterSourceOptions","createFilterOptions","matchFrom","stringify","option","concat","source","description","_ref3","sources","source1","source2","s1","Object","values","map","group","name","available_from_date","s2","cryptocurrencies","_ref2","symbol","toLowerCase","_toConsumableArray","getSource","Autocomplete","autoHighlight","options","isOptionEqualToValue","groupBy","getOptionLabel","filterOptions","renderOption","props","_ref4","selected","_jsxs","_objectSpread","paddingTop","paddingBottom","children","renderInput","params","placeholder","selectedFormat","FORMAT","code","symbols","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","multiple","disableCloseOnSelect","Checkbox","marginRight","checked","onClear","selectedValue","variant","InputProps","endAdornment","IconButton","visibility","onClick","ClearIcon","dispatch","useDispatch","setSelected","nm","setState","selectedStartDate","START_DATE","selectedEndDate","END_DATE","selectedBase","BASE","selectedSource","SOURCE","selectedSymbols","SYMBOLS","selectedAmount","AMOUNT","selectedPlace","PLACE","Button","DOWNLOAD_URLS","DOWNLOAD_DATA","start_date","end_date","base","join","amount","places","format","ext","downloadUrl","URLSearchParams","toString","JSON","text","focused","multiline","rows","downloadUrls","link","Grid","item","xs","Link","href","target","download","fetchSymbol","useEffect","document","title","padding","container","spacing","DateBox","event","FormatBox","Suspense","fallback","BaseBox","SymbolBox","TextBox","SourceBox","Box","display","ButtonGetData","DataBox","UrlBox","Divider"],"sourceRoot":""}