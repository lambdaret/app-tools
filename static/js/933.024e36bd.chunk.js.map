{"version":3,"file":"static/js/933.024e36bd.chunk.js","mappings":"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","sources":["api/wrapPromise.js","api/fetchData.js","pages/ExchangeRate/DateBox.jsx","pages/ExchangeRate/SourceBox.jsx","pages/ExchangeRate/FormatBox.jsx","pages/ExchangeRate/BaseBox.jsx","pages/ExchangeRate/SymbolBox.jsx","pages/ExchangeRate/TextBox.jsx","pages/ExchangeRate/ButtonGetData.jsx","pages/ExchangeRate/DataBox.jsx","pages/ExchangeRate/UrlBox.jsx","pages/ExchangeRate/LineChart.jsx","pages/ExchangeRate/index.jsx"],"sourcesContent":["function wrapPromise(promise) {\n  let status = \"pending\";\n  let response;\n\n  const suspender = promise.then(\n    (res) => {\n      status = \"success\";\n      response = res;\n    },\n    (err) => {\n      status = \"error\";\n      response = err;\n    }\n  );\n  const read = () => {\n    switch (status) {\n      case \"pending\":\n        throw suspender;\n      case \"error\":\n        throw response;\n      default:\n        return response;\n    }\n  };\n  return { read };\n}\n\nexport default wrapPromise;","import wrapPromise from \"./wrapPromise\";\n\nfunction fetchData(url) {\n  const promise = fetch(url)\n    .then((res) => res.json());\n    // .then((res) => res.data);\n\n  return wrapPromise(promise);\n}\n\nexport default fetchData;","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate } from \"./exchangeRateSlice\";\n\nconst DateBox = ({ label, type, onChange }) => {\n  const selectedDate = useSelector(getStateExchangeRate(type));\n  return (\n    <TextField\n      label={label}\n      type=\"date\"\n      value={selectedDate}\n      onChange={onChange}\n      size=\"small\"\n      sx={{ width: \"100%\" }}\n      inputProps={{ style: { paddingLeft: 5 } }}\n      InputLabelProps={{\n        shrink: true,\n      }}\n    />\n  );\n};\n\nexport default DateBox;\n","import React from \"react\";\nimport fetchData from \"api/fetchData\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate, SOURCE } from \"./exchangeRateSlice\";\n\nconst fetchSource1 = fetchData(\"https://api.exchangerate.host/sources\");\nconst fetchSource2 = fetchData(\n  \"https://api.exchangerate.host/cryptocurrencies\"\n);\n\nconst filterSourceOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.source} ${option?.description}`,\n});\n\nconst getSource = () => {\n  const source1 = fetchSource1.read();\n  const source2 = fetchSource2.read();\n\n  const s1 = Object.values(source1.sources).map(\n    ({ source, name, available_from_date }) => {\n      return {\n        group: \"sources\",\n        source: source,\n        description: name,\n        available_from_date: available_from_date,\n      };\n    }\n  );\n  const s2 = Object.values(source2.cryptocurrencies).map(({ symbol, name }) => {\n    return {\n      group: \"cryptocurrencies\",\n      source: symbol.toLowerCase(),\n      description: name,\n    };\n  });\n  return [...s1, ...s2];\n};\nconst isOptionEqualToValue = (option, value) => {\n  if (value === null) {\n    return true;\n  }\n  return option?.source === value?.source;\n};\n\nconst SourceBox = ({ onChange }) => {\n  const sources = getSource();\n  const selectedSource = useSelector(getStateExchangeRate(SOURCE));\n  return (\n    <Autocomplete\n      autoHighlight\n      onChange={onChange}\n      size=\"small\"\n      style={{ width: \"100%\" }}\n      options={sources}\n      value={selectedSource}\n      isOptionEqualToValue={isOptionEqualToValue}\n      groupBy={(option) => option?.group}\n      // disableCloseOnSelect\n      getOptionLabel={(option) => option?.source || \"\"}\n      filterOptions={filterSourceOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option?.source} - {option?.description}{\" \"}\n          {option?.available_from_date\n            ? `(${option?.available_from_date}~)`\n            : null}\n        </li>\n      )}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Source\" placeholder=\"Source\" />\n      )}\n    />\n  );\n};\n\nexport default SourceBox;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport Autocomplete from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { getStateExchangeRate, FORMAT } from \"./exchangeRateSlice\";\n\nconst isOptionEqualToValue = (option, value) => {\n  if (value === \"\") {\n    return true;\n  }\n  return option === value;\n};\n\nconst FormatBox = ({ onChange }) => {\n  const selectedFormat = useSelector(getStateExchangeRate(FORMAT));\n  return (\n    <Autocomplete\n      onChange={onChange}\n      size=\"small\"\n      value={selectedFormat}\n      isOptionEqualToValue={isOptionEqualToValue}\n      options={[\"xml\", \"csv\", \"tsv\"]}\n      getOptionLabel={(option) => option || \"\"}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Format\" placeholder=\"Format\" />\n      )}\n    />\n  );\n};\n\nexport default FormatBox;\n","import React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate, BASE } from \"./exchangeRateSlice\";\nconst filterOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.code} ${option?.description}`,\n});\n\nconst isOptionEqualToValue = (option, value) => {\n  if (value === \"\") {\n    return true;\n  }\n  return option?.code === value?.code;\n};\n\nconst BaseBox = ({ options, label, onChange }) => {\n  const selectedBase = useSelector(getStateExchangeRate(BASE));\n  return (\n    <Autocomplete\n      onChange={onChange}\n      autoHighlight\n      size=\"small\"\n      options={Object.values(options.symbols)}\n      value={selectedBase}\n      isOptionEqualToValue={isOptionEqualToValue}\n      getOptionLabel={(option) => option?.code || \"\"}\n      filterOptions={filterOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          {option.code} - {option.description}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label={label} placeholder={label} />\n      )}\n    />\n  );\n};\n\nexport default BaseBox;\n","import React from \"react\";\nimport Autocomplete, { createFilterOptions } from \"@mui/material/Autocomplete\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate, SYMBOLS } from \"./exchangeRateSlice\";\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\n\nconst filterOptions = createFilterOptions({\n  matchFrom: \"any\",\n  stringify: (option) => `${option?.code} ${option?.description}`,\n});\n\nconst isOptionEqualToValue = (option, value) => {\n  if (value === null) {\n    return true;\n  }\n  return option?.code === value?.code;\n};\nconst SymbolBox = ({ options, label, onChange }) => {\n  const selectedSymbols = useSelector(getStateExchangeRate(SYMBOLS));\n  return (\n    <Autocomplete\n      multiple\n      autoHighlight\n      onChange={onChange}\n      size=\"small\"\n      options={Object.values(options.symbols)}\n      value={selectedSymbols}\n      isOptionEqualToValue={isOptionEqualToValue}\n      disableCloseOnSelect\n      getOptionLabel={(option) => option?.code || \"\"}\n      filterOptions={filterOptions}\n      renderOption={(props, option, { selected }) => (\n        <li {...props} style={{ paddingTop: 0, paddingBottom: 0 }}>\n          <Checkbox\n            icon={icon}\n            checkedIcon={checkedIcon}\n            style={{ marginRight: 8, paddingTop: 0, paddingBottom: 0 }}\n            checked={selected}\n          />\n          {option?.code} - {option?.description}\n        </li>\n      )}\n      style={{ width: \"100%\" }}\n      renderInput={(params) => (\n        <TextField {...params} label={label} placeholder={label} />\n      )}\n    />\n  );\n};\n\nexport default SymbolBox;\n","import React from \"react\";\nimport TextField from \"@mui/material/TextField\";\nimport ClearIcon from \"@mui/icons-material/Clear\";\nimport IconButton from \"@mui/material/IconButton\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate } from \"./exchangeRateSlice\";\n\nconst TextBox = ({ label, type, onClear, onChange }) => {\n  const selectedValue = useSelector(getStateExchangeRate(type));\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      size=\"small\"\n      value={selectedValue}\n      onChange={onChange}\n      sx={{ width: \"100%\" }}\n      InputProps={{\n        endAdornment: (\n          <IconButton\n            sx={{ visibility: selectedValue ? \"visible\" : \"hidden\" }}\n            onClick={onClear}\n          >\n            <ClearIcon />\n          </IconButton>\n        ),\n      }}\n    />\n  );\n};\n\nexport default TextBox;\n","import React from \"react\";\nimport Button from \"@mui/material/Button\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  setStateExchangeRate,\n  getStateExchangeRate,\n  START_DATE,\n  END_DATE,\n  FORMAT,\n  BASE,\n  SOURCE,\n  SYMBOLS,\n  AMOUNT,\n  PLACE,\n  DOWNLOAD_URLS,\n  DOWNLOAD_DATA,\n  JSON_URL,\n  JSON_PARAM,\n} from \"./exchangeRateSlice\";\n\nconst ButtonGetData = () => {\n  const dispatch = useDispatch();\n  const setSelected = (nm, value) => {\n    dispatch(setStateExchangeRate(nm, value));\n  };\n\n  const selectedStartDate = useSelector(getStateExchangeRate(START_DATE));\n  const selectedEndDate = useSelector(getStateExchangeRate(END_DATE));\n  const selectedFormat = useSelector(getStateExchangeRate(FORMAT));\n  const selectedBase = useSelector(getStateExchangeRate(BASE));\n  const selectedSource = useSelector(getStateExchangeRate(SOURCE));\n  const selectedSymbols = useSelector(getStateExchangeRate(SYMBOLS));\n  const selectedAmount = useSelector(getStateExchangeRate(AMOUNT));\n  const selectedPlace = useSelector(getStateExchangeRate(PLACE));\n\n  const handleGetData = () => {\n    setSelected(DOWNLOAD_URLS, []);\n    setSelected(DOWNLOAD_DATA, \"\");\n    setSelected(JSON_URL, \"\");\n\n    const params = {\n      start_date: selectedStartDate || \"\",\n      end_date: selectedEndDate || \"\",\n      base: selectedBase?.code || \"\",\n      symbols: selectedSymbols\n        ? selectedSymbols.map(({ code }) => code).join(\",\")\n        : \"\",\n      amount: selectedAmount || \"\",\n      places: selectedPlace || \"\",\n      format: selectedFormat || \"\",\n      source: selectedSource?.source || \"\",\n    };\n    const url = \"https://api.exchangerate.host/timeseries\";\n    const ext = selectedFormat ? selectedFormat : \"json\";\n    const downloadUrl = `${url}?${new URLSearchParams(params).toString()}`;\n    // const jsonUrl = `${url}?${new URLSearchParams({\n    //   ...params,\n    //   format: \"\",\n    // }).toString()}`;\n    setSelected(JSON_URL, url);\n    setSelected(JSON_PARAM, {\n      ...params,\n      format: \"\",\n      t: new Date().getTime(),\n    });\n    setSelected(DOWNLOAD_URLS, [downloadUrl]);\n\n    if (ext === \"json\") {\n      fetch(downloadUrl)\n        .then((res) => res.json())\n        .then((res) => {\n          setSelected(DOWNLOAD_DATA, JSON.stringify(res, null, 2));\n        });\n    } else {\n      fetch(downloadUrl)\n        .then((res) => res.text())\n        .then((res) => {\n          setSelected(DOWNLOAD_DATA, res);\n        });\n    }\n  };\n  return (\n    <Button variant=\"contained\" onClick={handleGetData} size=\"small\">\n      Get Data\n    </Button>\n  );\n};\n\nexport default ButtonGetData;\n","import TextField from \"@mui/material/TextField\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate, DOWNLOAD_DATA } from \"./exchangeRateSlice\";\n\nconst DataBox = () => {\n  const value = useSelector(getStateExchangeRate(DOWNLOAD_DATA));\n  return (\n    <TextField\n      label=\"Rate\"\n      focused\n      multiline\n      rows={15}\n      sx={{ width: \"100%\" }}\n      value={value}\n      inputProps={{ wrap: \"off\" }}\n    />\n  );\n};\n\nexport default DataBox;\n","import Grid from \"@mui/material/Grid\";\nimport Link from \"@mui/material/Link\";\nimport { useSelector } from \"react-redux\";\nimport { getStateExchangeRate, DOWNLOAD_URLS } from \"./exchangeRateSlice\";\n\nconst UrlBox = () => {\n  const downloadUrls = useSelector(getStateExchangeRate(DOWNLOAD_URLS));\n  return downloadUrls?.map((link) => (\n    <Grid item xs={12} key={link}>\n      <Link\n        href={link}\n        target=\"_blank\"\n        download\n        style={{ wordBreak: \"break-all\" }}\n      >\n        {link}\n      </Link>\n    </Grid>\n  ));\n};\n\nexport default UrlBox;\n","import React, { Suspense, useEffect, useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStateExchangeRate, JSON_PARAM } from \"./exchangeRateSlice\";\nimport Plot from \"react-plotly.js\";\nimport axios from \"axios\";\n\nconst getUrls = (jsonParam) => {\n  if (jsonParam == null) {\n    return [];\n  }\n  const { start_date, end_date } = jsonParam;\n  const start_year = +start_date.slice(0, 4);\n  const end_year = +end_date.slice(0, 4);\n\n  const url = \"https://api.exchangerate.host/timeseries\";\n  const apiUrls = [];\n  for (let year = start_year; year <= end_year; year++) {\n    let start_day = `${year}-01-01`;\n    let end_day = `${year}-12-31`;\n    if (year === start_year) {\n      start_day = start_date;\n    }\n    if (year === end_year) {\n      end_day = end_date;\n    }\n    const newJsonParam = {\n      ...jsonParam,\n      start_date: start_day,\n      end_date: end_day,\n    };\n    const apiUrl = `${url}?${new URLSearchParams(newJsonParam).toString()}`;\n    apiUrls.push(apiUrl);\n  }\n  return apiUrls;\n};\n\nconst getData = (results) => {\n  const datas = results.map((result) => result.data);\n\n  const data = datas.slice(1).reduce((acc, cur) => {\n    return {\n      base: acc.base,\n      motd: acc.motd,\n      success: acc.success,\n      timeseries: acc.timeseries,\n      start_date:\n        acc.start_date <= cur.start_date ? acc.start_date : cur.start_date,\n      end_date: acc.end_date <= cur.end_date ? cur.end_date : acc.end_date,\n      rates: { ...acc.rates, ...cur.rates },\n    };\n  }, datas[0]);\n  return data;\n};\n\nconst getRates = (jsonData) => {\n  if (jsonData === undefined) {\n    return [];\n  }\n\n  const { rates } = jsonData;\n  if (rates === undefined) {\n    return [];\n  }\n\n  const dates = Object.keys(rates);\n  const symbol_x = {};\n  const symbol_y = {};\n  if (dates?.length > 0) {\n    for (let date of dates) {\n      const rates_date = rates[date];\n      for (let symbol in rates[date]) {\n        const rate = rates_date[symbol];\n        if (!(symbol in symbol_x)) {\n          symbol_x[symbol] = [];\n          symbol_y[symbol] = [];\n        }\n        symbol_x[symbol].push(date);\n        symbol_y[symbol].push(rate);\n      }\n    }\n    const symbols = Object.keys(symbol_x);\n    const data = symbols.map((symbol) => {\n      return {\n        x: Object.values(symbol_x[symbol]),\n        y: Object.values(symbol_y[symbol]),\n        type: \"scatter\",\n        name: symbol,\n        visible: symbol === symbols[0] ? true : \"legendonly\",\n      };\n    });\n    return data;\n  } else {\n    return [];\n  }\n};\n\nconst LineChart = () => {\n  const dispatch = useDispatch();\n  const jsonParam = useSelector(getStateExchangeRate(JSON_PARAM));\n  const [jsonData, setJsonData] = useState([]);\n\n  const apiUrls = getUrls(jsonParam);\n\n  const { data: datas, refetch } = useQuery({\n    queryKey: [\"query\"],\n    queryFn: () => axios.all(apiUrls.map((apiUrl) => axios.get(apiUrl))),\n    refetchOnWindowFocus: false,\n    suspense: true,\n    enable: false,\n  });\n\n  useEffect(() => {\n    refetch();\n  }, [refetch, jsonParam]);\n\n  useEffect(() => {\n    const data = getData(datas);\n    getRates();\n    setJsonData(data);\n  }, [datas, dispatch]);\n\n  const onRelayout = (e) => {};\n  return (\n    <Suspense fallback={<div>Loading ...6</div>}>\n      <Plot\n        data={getRates(jsonData)}\n        useResizeHandler={true}\n        layout={{\n          showlegend: true,\n          autosize: true,\n          dragmode: \"pan\",\n          xaxis: {\n            type: \"date\",\n            tickformat: \"%Y-%m-%d\",\n            tickangle: -45,\n          },\n          title: `Exchange Rate - Base: ${jsonData?.base || \"\"}`,\n        }}\n        config={{\n          displayModeBar: true,\n          displaylogo: false,\n        }}\n        style={{\n          width: \"100%\",\n          height: \"100%\",\n        }}\n        onRelayout={onRelayout}\n      />\n    </Suspense>\n  );\n};\n\nexport default LineChart;\n","import React, { Suspense, useEffect } from \"react\";\nimport fetchData from \"api/fetchData\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport Link from \"@mui/material/Link\";\nimport Divider from \"@mui/material/Divider\";\nimport DateBox from \"./DateBox\";\nimport SourceBox from \"./SourceBox\";\nimport FormatBox from \"./FormatBox\";\nimport BaseBox from \"./BaseBox\";\nimport SymbolBox from \"./SymbolBox\";\nimport TextBox from \"./TextBox\";\n\nimport { useDispatch } from \"react-redux\";\nimport {\n  setStateExchangeRate,\n  START_DATE,\n  END_DATE,\n  FORMAT,\n  BASE,\n  SOURCE,\n  SYMBOLS,\n  AMOUNT,\n  PLACE,\n} from \"./exchangeRateSlice\";\nimport { MENU_NM, setStateTopBar } from \"components/TopBar/topBarSlice\";\nimport ButtonGetData from \"./ButtonGetData\";\nimport DataBox from \"./DataBox\";\nimport UrlBox from \"./UrlBox\";\nimport LineChart from \"./LineChart\";\n\nconst fetchSymbol = fetchData(\"https://api.exchangerate.host/symbols\");\n\nconst ExchangeRate = () => {\n  const dispatch = useDispatch();\n\n  const setSelected = (nm, value) => {\n    dispatch(setStateExchangeRate(nm, value));\n  };\n\n  const handleChangeStartDate = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(START_DATE, value);\n  };\n  const handleChangeEndDate = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(END_DATE, value);\n  };\n  const handleChangeFormat = (event, value) => {\n    setSelected(FORMAT, value);\n  };\n  const handleChangeBase = (event, value) => {\n    setSelected(BASE, value);\n  };\n  const handleChangeSource = (event, value) => {\n    setSelected(SOURCE, value);\n  };\n  const handleChangeSymbol = (event, value) => {\n    setSelected(SYMBOLS, value);\n  };\n  const handleChangeAmount = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(AMOUNT, value);\n  };\n  const handleClearAmount = (event) => {\n    setSelected(AMOUNT, \"\");\n  };\n  const handleChangePlace = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setSelected(PLACE, value);\n  };\n  const handleClearPlace = (event) => {\n    setSelected(PLACE, \"\");\n  };\n  const symbols = fetchSymbol.read();\n\n  useEffect(() => {\n    dispatch(setStateTopBar(MENU_NM, \"Exchange Rate\"));\n  }, [dispatch]);\n  return (\n    <div style={{ padding: 0 }}>\n      <Grid container spacing={1}>\n        <Grid item xs=\"auto\" style={{ width: \"36%\" }}>\n          <DateBox\n            label=\"Start Date\"\n            type={START_DATE}\n            onChange={handleChangeStartDate}\n          />\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"36%\" }}>\n          <DateBox\n            label=\"End Date\"\n            type={END_DATE}\n            onChange={handleChangeEndDate}\n          />\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"28%\" }}>\n          <FormatBox onChange={handleChangeFormat} />\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"50%\" }}>\n          <Suspense fallback={<div>Loading ...4</div>}>\n            <BaseBox\n              label=\"Base\"\n              options={symbols}\n              onChange={handleChangeBase}\n            />\n          </Suspense>\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"50%\" }}>\n          <Suspense fallback={<div>Loading ...5</div>}>\n            <SymbolBox\n              label=\"Symbols\"\n              options={symbols}\n              multiple={true}\n              onChange={handleChangeSymbol}\n            />\n          </Suspense>\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"50%\" }}>\n          <TextBox\n            label=\"Amount\"\n            type={AMOUNT}\n            onClear={handleClearAmount}\n            onChange={handleChangeAmount}\n          />\n        </Grid>\n        <Grid item xs=\"auto\" style={{ width: \"50%\" }}>\n          <TextBox\n            label=\"Place\"\n            type={PLACE}\n            onClear={handleClearPlace}\n            onChange={handleChangePlace}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Suspense fallback={<div>Loading ...6</div>}>\n            <SourceBox onChange={handleChangeSource} />\n          </Suspense>\n        </Grid>\n        <Grid item xs={12}>\n          <Box sx={{ display: \"flex\" }}>\n            <ButtonGetData />\n          </Box>\n        </Grid>\n        <Grid item xs={12}>\n          <Suspense fallback={<div>Loading ...7</div>}>\n            <LineChart style={{ width: \"100%\" }} />\n          </Suspense>\n        </Grid>\n        <Grid item xs={12}>\n          <DataBox />\n        </Grid>\n        <UrlBox />\n        <Grid item xs={12}>\n          <Divider />\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://exchangerate.host/#/docs\" target=\"_blank\">\n            https://exchangerate.host/#/docs\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://api.exchangerate.host/symbols\" target=\"_blank\">\n            https://api.exchangerate.host/symbols\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link href=\"https://api.exchangerate.host/sources\" target=\"_blank\">\n            https://api.exchangerate.host/sources\n          </Link>\n        </Grid>\n        <Grid item xs={12}>\n          <Link\n            href=\"https://api.exchangerate.host/cryptocurrencies\"\n            target=\"_blank\"\n          >\n            https://api.exchangerate.host/cryptocurrencies\n          </Link>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default ExchangeRate;\n"],"names":["promise","response","status","suspender","then","res","err","read","url","fetch","json","wrapPromise","_ref","label","type","onChange","selectedDate","useSelector","getStateExchangeRate","_jsx","TextField","value","size","sx","width","inputProps","style","paddingLeft","InputLabelProps","shrink","fetchSource1","fetchData","fetchSource2","filterSourceOptions","createFilterOptions","matchFrom","stringify","option","concat","source","description","isOptionEqualToValue","_ref3","sources","source1","source2","s1","Object","values","map","group","name","available_from_date","s2","cryptocurrencies","_ref2","symbol","toLowerCase","_toConsumableArray","getSource","selectedSource","SOURCE","Autocomplete","autoHighlight","options","groupBy","getOptionLabel","filterOptions","renderOption","props","_ref4","selected","_jsxs","_objectSpread","paddingTop","paddingBottom","children","renderInput","params","placeholder","selectedFormat","FORMAT","code","selectedBase","BASE","symbols","icon","CheckBoxOutlineBlankIcon","fontSize","checkedIcon","CheckBoxIcon","selectedSymbols","SYMBOLS","multiple","disableCloseOnSelect","Checkbox","marginRight","checked","onClear","selectedValue","variant","InputProps","endAdornment","IconButton","visibility","onClick","ClearIcon","dispatch","useDispatch","setSelected","nm","setStateExchangeRate","selectedStartDate","START_DATE","selectedEndDate","END_DATE","selectedAmount","AMOUNT","selectedPlace","PLACE","Button","DOWNLOAD_URLS","DOWNLOAD_DATA","JSON_URL","start_date","end_date","base","join","amount","places","format","ext","downloadUrl","URLSearchParams","toString","JSON_PARAM","t","Date","getTime","JSON","text","focused","multiline","rows","wrap","downloadUrls","link","Grid","item","xs","Link","href","target","download","wordBreak","getRates","jsonData","undefined","rates","dates","keys","symbol_x","symbol_y","length","_step","_iterator","_createForOfIteratorHelper","s","n","done","date","rates_date","rate","push","e","f","data","x","y","visible","jsonParam","_useState","useState","_useState2","_slicedToArray","setJsonData","apiUrls","start_year","slice","end_year","year","start_day","end_day","newJsonParam","apiUrl","getUrls","_useQuery","useQuery","queryKey","queryFn","axios","refetchOnWindowFocus","suspense","enable","datas","refetch","useEffect","results","result","reduce","acc","cur","motd","success","timeseries","getData","Suspense","fallback","Plot","useResizeHandler","layout","showlegend","autosize","dragmode","xaxis","tickformat","tickangle","title","config","displayModeBar","displaylogo","height","onRelayout","fetchSymbol","setStateTopBar","MENU_NM","padding","container","spacing","DateBox","event","FormatBox","BaseBox","SymbolBox","TextBox","SourceBox","Box","display","ButtonGetData","LineChart","DataBox","UrlBox","Divider"],"sourceRoot":""}